# Generated by Django 5.2.3 on 2025-06-18 10:38

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('crm', '0023_alter_trato_fecha_creacion'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InformeTrabajo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_servicio', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de Servicio')),
                ('hora_ingreso', models.DateTimeField(blank=True, null=True, verbose_name='Hora de Ingreso')),
                ('hora_salida', models.DateTimeField(blank=True, null=True, verbose_name='Hora de Salida')),
                ('tiempo_total_minutos', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tiempo Total (minutos)')),
                ('descripcion_problema', models.TextField(blank=True, verbose_name='Descripción del Problema')),
                ('diagnostico_preliminar', models.TextField(blank=True, verbose_name='Diagnóstico Preliminar')),
                ('detalle_trabajos', models.TextField(blank=True, verbose_name='Detalle de Trabajos Realizados')),
                ('causas_problema', models.JSONField(blank=True, default=list, verbose_name='Causas del Problema')),
                ('tipos_falla', models.JSONField(blank=True, default=list, verbose_name='Tipos de Falla')),
                ('tecnico_nombre', models.CharField(blank=True, max_length=200, verbose_name='Nombre del Técnico')),
                ('tecnico_cargo', models.CharField(blank=True, max_length=100, verbose_name='Cargo del Técnico')),
                ('tecnico_fecha_firma', models.DateField(blank=True, null=True, verbose_name='Fecha Firma Técnico')),
                ('tecnico_firma', models.ImageField(blank=True, upload_to='firmas/tecnicos/', verbose_name='Firma del Técnico')),
                ('cliente_nombre', models.CharField(blank=True, max_length=200, verbose_name='Nombre del Cliente')),
                ('cliente_cargo', models.CharField(blank=True, max_length=100, verbose_name='Cargo del Cliente')),
                ('cliente_fecha_firma', models.DateField(blank=True, null=True, verbose_name='Fecha Firma Cliente')),
                ('cliente_firma', models.ImageField(blank=True, upload_to='firmas/clientes/', verbose_name='Firma del Cliente')),
                ('satisfaccion_cliente', models.CharField(blank=True, choices=[('muy_insatisfecho', 'Muy Insatisfecho'), ('insatisfecho', 'Insatisfecho'), ('satisfecho', 'Satisfecho'), ('muy_satisfecho', 'Muy Satisfecho')], max_length=20, verbose_name='Satisfacción del Cliente')),
                ('recomendaciones', models.TextField(blank=True, verbose_name='Recomendaciones y Observaciones')),
                ('observaciones_adicionales', models.TextField(blank=True, verbose_name='Observaciones Adicionales')),
                ('latitud_servicio', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='Latitud del Servicio')),
                ('longitud_servicio', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='Longitud del Servicio')),
                ('ubicacion_verificada', models.BooleanField(default=False, verbose_name='Ubicación Verificada')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('completado', models.BooleanField(default=False, verbose_name='Completado')),
            ],
            options={
                'verbose_name': 'Informe de Trabajo',
                'verbose_name_plural': 'Informes de Trabajo',
                'ordering': ['-fecha_servicio'],
            },
        ),
        migrations.CreateModel(
            name='MaterialConsumible',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=200, verbose_name='Descripción')),
                ('marca', models.CharField(blank=True, max_length=100, verbose_name='Marca')),
                ('referencia', models.CharField(blank=True, max_length=100, verbose_name='Referencia')),
                ('unidad_medida', models.CharField(default='Unidad', max_length=50, verbose_name='Unidad de Medida')),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cantidad')),
                ('suministrado_por', models.CharField(choices=[('cliente', 'Cliente'), ('empresa', 'Empresa')], max_length=20, verbose_name='Suministrado por')),
                ('costo_unitario', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Costo Unitario')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('informe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materiales', to='servicios.informetrabajo')),
            ],
            options={
                'verbose_name': 'Material/Consumible',
                'verbose_name_plural': 'Materiales/Consumibles',
                'ordering': ['descripcion'],
            },
        ),
        migrations.CreateModel(
            name='SolicitudServicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_orden', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Número de Orden')),
                ('estado', models.CharField(choices=[('planeada', 'Planeada'), ('en_proceso', 'En Proceso'), ('ejecutada', 'Ejecutada'), ('cancelada', 'Cancelada')], default='planeada', max_length=20, verbose_name='Estado')),
                ('tipo_servicio', models.CharField(choices=[('inspeccion', 'Visita de Inspección'), ('preventivo', 'Mantenimiento Preventivo'), ('correctivo', 'Mantenimiento Correctivo')], max_length=20, verbose_name='Tipo de Servicio')),
                ('prioridad', models.CharField(choices=[('baja', 'Baja'), ('media', 'Media'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='media', max_length=10, verbose_name='Prioridad')),
                ('direccion_servicio', models.TextField(help_text='Dirección específica donde se realizará el servicio', verbose_name='Dirección de Servicio')),
                ('centro_costo', models.CharField(blank=True, max_length=100, verbose_name='Centro de Costo')),
                ('fecha_programada', models.DateTimeField(verbose_name='Fecha Programada')),
                ('duracion_estimada', models.PositiveIntegerField(default=120, verbose_name='Duración Estimada (minutos)')),
                ('latitud', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='Latitud')),
                ('longitud', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='Longitud')),
                ('direccion_gps', models.TextField(blank=True, verbose_name='Dirección GPS')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('observaciones_internas', models.TextField(blank=True, verbose_name='Observaciones Internas')),
                ('cliente_crm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicios_field', to='crm.cliente')),
                ('contacto_crm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servicios_field', to='crm.contacto')),
                ('creado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servicios_creados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Solicitud de Servicio',
                'verbose_name_plural': 'Solicitudes de Servicio',
                'ordering': ['-fecha_programada'],
            },
        ),
        migrations.AddField(
            model_name='informetrabajo',
            name='solicitud_servicio',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='informe', to='servicios.solicitudservicio'),
        ),
        migrations.CreateModel(
            name='Tecnico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_tecnico', models.CharField(max_length=20, unique=True, verbose_name='Código Técnico')),
                ('telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('especialidades', models.TextField(blank=True, help_text='Especialidades técnicas separadas por comas', verbose_name='Especialidades')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tecnico_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Técnico',
                'verbose_name_plural': 'Técnicos',
                'ordering': ['usuario__first_name', 'usuario__last_name'],
            },
        ),
        migrations.AddField(
            model_name='solicitudservicio',
            name='tecnico_asignado',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servicios_asignados', to='servicios.tecnico'),
        ),
        migrations.CreateModel(
            name='UbicacionTecnico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitud', models.DecimalField(decimal_places=8, max_digits=10, verbose_name='Latitud')),
                ('longitud', models.DecimalField(decimal_places=8, max_digits=11, verbose_name='Longitud')),
                ('precision', models.PositiveIntegerField(blank=True, null=True, verbose_name='Precisión (metros)')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('solicitud_servicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ubicaciones_tecnico', to='servicios.solicitudservicio')),
                ('tecnico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ubicaciones', to='servicios.tecnico')),
            ],
            options={
                'verbose_name': 'Ubicación del Técnico',
                'verbose_name_plural': 'Ubicaciones del Técnico',
                'ordering': ['-timestamp'],
            },
        ),
    ]
