# Dockerfile optimizado para Cloud Run (máximo ahorro)
FROM python:3.12-slim

# Variables de entorno
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PORT=8080

# Instalar solo dependencias esenciales
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copiar y instalar dependencias Python
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copiar código
COPY . .

# Recopilar archivos estáticos usando settings locales
ENV DJANGO_SETTINGS_MODULE=rgd_aire.settings_appengine
RUN python manage.py collectstatic --noinput

# Crear usuario no-root para seguridad
RUN useradd -m -u 1000 appuser && chown -R appuser:appuser /app
USER appuser

# Script de inicio que ejecuta migraciones y luego arranca gunicorn
CMD ["sh", "-c", "python manage.py migrate --noinput && exec gunicorn rgd_aire.wsgi:application --bind 0.0.0.0:$PORT --workers 1 --threads 4 --timeout 0 --access-logfile - --error-logfile -"]