steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/rgd-aire:$COMMIT_SHA', '.']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/rgd-aire:$COMMIT_SHA']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'rgd-aire'
      - '--image'
      - 'gcr.io/$PROJECT_ID/rgd-aire:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'DJANGO_SETTINGS_MODULE=rgd_aire.settings_production'
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
      - '--set-env-vars'
      - 'USE_CLOUD_SQL=true'
      - '--add-cloudsql-instances'
      - '$PROJECT_ID:us-central1:rgd-aire-db'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '10'

  # Run database migrations
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'jobs'
      - 'execute'
      - 'rgd-aire-migrate'
      - '--region'
      - 'us-central1'
      - '--wait'

images:
  - 'gcr.io/$PROJECT_ID/rgd-aire:$COMMIT_SHA'