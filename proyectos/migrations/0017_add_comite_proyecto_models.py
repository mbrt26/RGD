# Generated by Django 5.2.3 on 2025-06-19 23:56

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('proyectos', '0016_bitacora_dispositivo_firma_director_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComiteProyecto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre del Comité')),
                ('fecha_comite', models.DateTimeField(verbose_name='Fecha y Hora del Comité')),
                ('tipo_comite', models.CharField(choices=[('semanal', 'Comité Semanal'), ('mensual', 'Comité Mensual'), ('extraordinario', 'Comité Extraordinario'), ('revision', 'Comité de Revisión')], default='semanal', max_length=20, verbose_name='Tipo de Comité')),
                ('lugar', models.CharField(blank=True, max_length=200, verbose_name='Lugar de Reunión')),
                ('agenda', models.TextField(blank=True, verbose_name='Agenda del Comité')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones Generales')),
                ('acta_reunion', models.FileField(blank=True, upload_to='comites/actas/', verbose_name='Acta de Reunión')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('estado', models.CharField(choices=[('programado', 'Programado'), ('en_curso', 'En Curso'), ('finalizado', 'Finalizado'), ('cancelado', 'Cancelado')], default='programado', max_length=20, verbose_name='Estado')),
                ('coordinador', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comites_coordinados', to='proyectos.colaborador', verbose_name='Coordinador del Comité')),
                ('creado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comites_creados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comité de Proyecto',
                'verbose_name_plural': 'Comités de Proyectos',
                'ordering': ['-fecha_comite'],
            },
        ),
        migrations.CreateModel(
            name='ParticipanteComite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_participacion', models.CharField(choices=[('obligatorio', 'Obligatorio'), ('opcional', 'Opcional'), ('invitado', 'Invitado')], default='obligatorio', max_length=20, verbose_name='Tipo de Participación')),
                ('estado_asistencia', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmado', 'Confirmado'), ('ausente', 'Ausente'), ('presente', 'Presente')], default='pendiente', max_length=20, verbose_name='Estado de Asistencia')),
                ('rol_en_comite', models.CharField(blank=True, help_text='Ej: Presentador, Revisor, Observador', max_length=100, verbose_name='Rol en el Comité')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('fecha_confirmacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Confirmación')),
                ('colaborador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proyectos.colaborador')),
                ('comite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proyectos.comiteproyecto')),
            ],
            options={
                'verbose_name': 'Participante de Comité',
                'verbose_name_plural': 'Participantes de Comité',
                'unique_together': {('comite', 'colaborador')},
            },
        ),
        migrations.AddField(
            model_name='comiteproyecto',
            name='participantes',
            field=models.ManyToManyField(related_name='comites_participados', through='proyectos.ParticipanteComite', to='proyectos.colaborador', verbose_name='Participantes'),
        ),
        migrations.CreateModel(
            name='SeguimientoProyectoComite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado_seguimiento', models.CharField(choices=[('verde', 'Verde - Sin problemas'), ('amarillo', 'Amarillo - Requiere atención'), ('rojo', 'Rojo - Crítico'), ('azul', 'Azul - En pausa')], default='verde', max_length=20, verbose_name='Estado de Seguimiento')),
                ('avance_reportado', models.DecimalField(decimal_places=2, help_text='Avance reportado en este comité', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Avance Reportado (%)')),
                ('avance_anterior', models.DecimalField(blank=True, decimal_places=2, help_text='Avance del comité anterior para comparación', max_digits=5, null=True, verbose_name='Avance Anterior (%)')),
                ('logros_periodo', models.TextField(help_text='Principales logros desde el último comité', verbose_name='Logros del Período')),
                ('dificultades', models.TextField(blank=True, help_text='Problemas o obstáculos identificados', verbose_name='Dificultades Encontradas')),
                ('acciones_requeridas', models.TextField(blank=True, help_text='Acciones específicas definidas en el comité', verbose_name='Acciones Requeridas')),
                ('fecha_proximo_hito', models.DateField(blank=True, help_text='Fecha del próximo hito importante', null=True, verbose_name='Fecha Próximo Hito')),
                ('presupuesto_ejecutado', models.DecimalField(blank=True, decimal_places=2, help_text='Presupuesto ejecutado reportado en este comité', max_digits=15, null=True, verbose_name='Presupuesto Ejecutado')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones Específicas')),
                ('orden_presentacion', models.PositiveIntegerField(default=1, help_text='Orden en que se presenta el proyecto en el comité', verbose_name='Orden de Presentación')),
                ('tiempo_asignado', models.PositiveIntegerField(default=10, help_text='Tiempo asignado para la presentación del proyecto', verbose_name='Tiempo Asignado (minutos)')),
                ('requiere_decision', models.BooleanField(default=False, help_text='Marca si el proyecto requiere una decisión del comité', verbose_name='Requiere Decisión')),
                ('decision_tomada', models.TextField(blank=True, help_text='Decisión específica tomada por el comité para este proyecto', verbose_name='Decisión Tomada')),
                ('comite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguimientos', to='proyectos.comiteproyecto')),
                ('proyecto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguimientos_comite', to='proyectos.proyecto')),
                ('responsable_reporte', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reportes_comite', to='proyectos.colaborador', verbose_name='Responsable del Reporte')),
            ],
            options={
                'verbose_name': 'Seguimiento de Proyecto en Comité',
                'verbose_name_plural': 'Seguimientos de Proyectos en Comités',
                'ordering': ['orden_presentacion', 'proyecto__nombre_proyecto'],
                'unique_together': {('comite', 'proyecto')},
            },
        ),
    ]
